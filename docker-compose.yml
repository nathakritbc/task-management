version: '3.8'

services:

  frontend:
    build:
      context: ./task-manager-vue
      dockerfile: Dockerfile
    container_name: vue-frontend
    environment:
      - NODE_ENV=production
    volumes:
      - ./task-manager-vue:/app
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./task-manager-vue/dist:/usr/share/nginx/html
    depends_on:
      - frontend
    networks:
      - app-network

  backend:
    image: golang:1.22.3-alpine
    container_name: go-backend
    working_dir: /app
    volumes:
      - ./task-management-backend-go:/app
    command: sh -c "go mod tidy && go run main.go"
    ports:
      - "9090:9090"
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=mydb
    depends_on:
      - database
    networks:
      - app-network

  database:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=user1
      - POSTGRES_PASSWORD=user1!12345678
      - POSTGRES_DB=taskdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user1 -d taskdb"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
